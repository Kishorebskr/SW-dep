apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.deploymentName }}
  template:
    metadata:
      labels:
        app: {{ .Values.deploymentName }}
    spec:
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Release.Name }}-nginx-config
      containers:
        - name: {{ .Values.deploymentName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          ports:
            - containerPort: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30  # Give more time for container to start
            periodSeconds: 10
            failureThreshold: 6      # Allow more failures before marking not ready
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 60  # Give plenty of time before checking liveness
            periodSeconds: 20
          env:
            - name: ENVIRONMENT
              value: {{ .Values.environment }}
            - name: PORT
              value: "{{ .Values.port }}"
          {{- if .Values.resources }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu | default "200m" }}
              memory: {{ .Values.resources.limits.memory | default "256Mi" }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "100m" }}
              memory: {{ .Values.resources.requests.memory | default "128Mi" }}
          {{- end }}


