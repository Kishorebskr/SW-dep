apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.deploymentName }}
  template:
    metadata:
      labels:
        app: {{ .Values.deploymentName }}
    spec:
      initContainers:
        - name: fix-assets
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Create webapp-prod directory
              mkdir -p /usr/share/nginx/html/webapp-prod
              
              # Copy specific files to avoid recursive copy issues
              for file in $(ls -A /usr/share/nginx/html/ | grep -v "webapp-prod"); do
                cp -r /usr/share/nginx/html/$file /usr/share/nginx/html/webapp-prod/ 2>/dev/null || true
              done
              
              # Create redirect from root
              echo '<html><head><meta http-equiv="refresh" content="0;URL=/webapp-prod/"></head></html>' > /usr/share/nginx/html/index.html
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
      containers:
        - name: {{ .Values.deploymentName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: ENVIRONMENT
              value: {{ .Values.environment }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          {{- if .Values.resources }}
          resources:
            {{- if .Values.resources.requests }}
            requests:
              {{- if .Values.resources.requests.memory }}
              memory: {{ .Values.resources.requests.memory }}
              {{- end }}
              {{- if .Values.resources.requests.cpu }}
              cpu: {{ .Values.resources.requests.cpu }}
              {{- end }}
            {{- end }}
            {{- if .Values.resources.limits }}
            limits:
              {{- if .Values.resources.limits.memory }}
              memory: {{ .Values.resources.limits.memory }}
              {{- end }}
              {{- if .Values.resources.limits.cpu }}
              cpu: {{ .Values.resources.limits.cpu }}
              {{- end }}
            {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: html
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: {{ .Release.Name }}-nginx-config