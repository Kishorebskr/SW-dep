name: Deploy Helm Chart

on:
  workflow_dispatch:
    inputs:
      imageRepo:
        description: 'Docker image repository'
        required: false
        default: '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev'
      imageTag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.8.0'

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Install AWS IAM Authenticator
        run: |
          curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.6.11/aws-iam-authenticator_0.6.11_linux_amd64
          chmod +x ./aws-iam-authenticator
          sudo mv aws-iam-authenticator /usr/local/bin/
          aws-iam-authenticator version
      
      - name: Configure kubeconfig using AWS IAM Authenticator
        run: |
          # Create a basic kubeconfig
          CLUSTER_NAME="${{ secrets.EKS_CLUSTER_NAME }}"
          REGION="ap-south-1"
          
          # Get cluster endpoint
          ENDPOINT=$(aws eks describe-cluster --name $CLUSTER_NAME --region $REGION --query "cluster.endpoint" --output text)
          
          # Get certificate authority data
          CA_DATA=$(aws eks describe-cluster --name $CLUSTER_NAME --region $REGION --query "cluster.certificateAuthority.data" --output text)
          
          # Create kubeconfig file
          cat > kubeconfig << EOF
          apiVersion: v1
          clusters:
          - cluster:
              server: ${ENDPOINT}
              certificate-authority-data: ${CA_DATA}
            name: ${CLUSTER_NAME}
          contexts:
          - context:
              cluster: ${CLUSTER_NAME}
              user: aws-iam-authenticator
            name: ${CLUSTER_NAME}
          current-context: ${CLUSTER_NAME}
          kind: Config
          preferences: {}
          users:
          - name: aws-iam-authenticator
            user:
              exec:
                apiVersion: client.authentication.k8s.io/v1beta1
                command: aws-iam-authenticator
                args:
                  - "token"
                  - "-i"
                  - "${CLUSTER_NAME}"
                  - "--region"
                  - "${REGION}"
          EOF
          
          # Export kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
          
          # Display kubectl version to verify installation
          kubectl version --client

      - name: Verify Kubernetes connection
        run: |
          echo "Using kubeconfig at $KUBECONFIG"
          kubectl config view
          kubectl get nodes

      - name: Create namespaces
        run: |
          kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace production --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Helm Chart to Development
        if: github.ref == 'refs/heads/dev'
        run: |
          IMAGE_REPO="${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }}"
          IMAGE_TAG="${{ github.event.inputs.imageTag || 'latest' }}"
          
          helm upgrade --install webapp ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/dev.yaml \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG \
            -n dev

      - name: Deploy Helm Chart to Production
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE_REPO="${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }}"
          IMAGE_TAG="${{ github.event.inputs.imageTag || 'latest' }}"
          
          helm upgrade --install webapp ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/prod.yaml \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG \
            -n production





