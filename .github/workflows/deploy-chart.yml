name: Deploy Helm Chart

on:
  workflow_dispatch:
    inputs:
      imageRepo:
        description: 'Docker image repository'
        required: false
        default: '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev'
      imageTag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.8.0'

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: List available EKS clusters
        run: aws eks list-clusters --region ap-south-1

      - name: Update kubeconfig and verify authentication
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ap-south-1
          
          # Verify AWS identity being used
          aws sts get-caller-identity
          
          # Create token file manually
          TOKEN=$(aws eks get-token --cluster-name ${{ secrets.EKS_CLUSTER_NAME }} --region ap-south-1 | jq -r '.status.token')
          echo "Using token for authentication"
          
          # Set up kubectl to use the token directly
          kubectl config set-credentials eks-token --token=$TOKEN
          kubectl config set-context --current --user=eks-token

      - name: Verify Kubernetes connection
        run: |
          kubectl config view
          kubectl get nodes

      - name: Create namespaces
        run: |
          kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace production --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Helm Chart to Development
        if: github.ref == 'refs/heads/dev'
        run: |
          IMAGE_REPO="${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }}"
          IMAGE_TAG="${{ github.event.inputs.imageTag || 'latest' }}"
          
          helm upgrade --install webapp ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/dev.yaml \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG \
            -n dev

      - name: Deploy Helm Chart to Production
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE_REPO="${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }}"
          IMAGE_TAG="${{ github.event.inputs.imageTag || 'latest' }}"
          
          helm upgrade --install webapp ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/prod.yaml \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG \
            -n production





