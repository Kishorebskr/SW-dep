name: Deploy Helm Chart (Token Only - Zero Downtime)

on:
  workflow_dispatch:
    inputs:
      imageRepo:
        description: 'Docker image repository'
        required: false
        default: '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev'
      imageTag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
  push:
    branches:
      - main

jobs:
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.13.0'

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl with ServiceAccount Token
        env:
          K8S_SERVER: https://8E8E0B619BB89BD85A4298A1A6C979C3.gr7.ap-south-1.eks.amazonaws.com
          K8S_TOKEN: ${{ secrets.K8S_TOKEN }}
        run: |
          mkdir -p ~/.kube
          cat <<EOF > ~/.kube/config
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: ${K8S_SERVER}
            name: eks-cluster
          contexts:
          - context:
              cluster: eks-cluster
              user: sa-user
            name: eks-context
          current-context: eks-context
          users:
          - name: sa-user
            user:
              token: ${K8S_TOKEN}
          EOF

      - name: Verify Kubernetes Connection
        run: |
          echo "üîç Checking cluster connectivity..."
          kubectl cluster-info
          kubectl get nodes -o wide

      - name: Create Dev Namespace
        run: |
          kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Helm Chart to Dev
        run: |
          echo "üöÄ Deploying to Dev..."
          NS="dev"
          RELEASE="webapp-dev"
          helm upgrade --install $RELEASE ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/dev.yaml \
            --set image.repository=${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }} \
            --set image.tag=${{ github.event.inputs.imageTag || 'latest' }} \
            -n $NS

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-22.04
    needs: deploy-dev   # ‚úÖ ensures dev deploy runs first

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.13.0'

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl with ServiceAccount Token
        env:
          K8S_SERVER: https://8E8E0B619BB89BD85A4298A1A6C979C3.gr7.ap-south-1.eks.amazonaws.com
          K8S_TOKEN: ${{ secrets.K8S_TOKEN }}
        run: |
          mkdir -p ~/.kube
          cat <<EOF > ~/.kube/config
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: ${K8S_SERVER}
            name: eks-cluster
          contexts:
          - context:
              cluster: eks-cluster
              user: sa-user
            name: eks-context
          current-context: eks-context
          users:
          - name: sa-user
            user:
              token: ${K8S_TOKEN}
          EOF

      - name: Verify Kubernetes Connection
        run: |
          echo "üîç Checking cluster connectivity..."
          kubectl cluster-info
          kubectl get nodes -o wide

      - name: Create Production Namespace
        run: |
          kubectl create namespace production --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Helm Chart to Production
        run: |
          echo "üöÄ Deploying to Production..."
          NS="production"
          RELEASE="webapp-prod"
          helm upgrade --install $RELEASE ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/prod.yaml \
            --set image.repository=${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }} \
            --set image.tag=${{ github.event.inputs.imageTag || 'latest' }} \
            -n $NS
