name: Deploy Helm Chart

on:
  workflow_dispatch:
    inputs:
      imageRepo:
        description: 'Docker image repository'
        required: false
        default: '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev'
      imageTag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.8.0'

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl with Service Account Token
        run: |
          mkdir -p $HOME/.kube
          cat <<EOF > $HOME/.kube/config
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: https://8E8E0B619BB89BD85A4298A1A6C979C3.gr7.ap-south-1.eks.amazonaws.com
            name: my-eks-cluster
          contexts:
          - context:
              cluster: my-eks-cluster
              user: service-account-user
            name: my-context
          current-context: my-context
          kind: Config
          preferences: {}
          users:
          - name: service-account-user
            user:
              token: ${{ secrets.K8S_TOKEN }}
          EOF

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version
          
      - name: Verify AWS connectivity and permissions
        run: |
          # Show caller identity for debugging
          echo "Current AWS identity:"
          aws sts get-caller-identity
          
          # List clusters to verify access
          echo "Available EKS clusters:"
          aws eks list-clusters --region ap-south-1
          
          # Verify specific cluster exists
          CLUSTER_NAME="${{ secrets.EKS_CLUSTER_NAME }}"
          echo "Checking cluster $CLUSTER_NAME exists:"
          aws eks describe-cluster --name $CLUSTER_NAME --region ap-south-1 --query "cluster.status"

      - name: Configure kubectl with AWS EKS
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Verify Kubernetes connection
        run: |
          kubectl config get-contexts
          kubectl cluster-info
          kubectl get ns

      - name: Create namespaces
        run: |
          kubectl create namespace dev --dry-run=client -o yaml | kubectl apply --validate=false -f -
          kubectl create namespace production --dry-run=client -o yaml | kubectl apply --validate=false -f -

      - name: Deploy Helm Chart to Development
        if: github.ref == 'refs/heads/dev'
        run: |
          IMAGE_REPO="${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }}"
          IMAGE_TAG="${{ github.event.inputs.imageTag || 'latest' }}"
          
          helm upgrade --install webapp ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/dev.yaml \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG \
            -n dev

      - name: Deploy Helm Chart to Production
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE_REPO="${{ github.event.inputs.imageRepo || '990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev' }}"
          IMAGE_TAG="${{ github.event.inputs.imageTag || 'latest' }}"
          
          helm upgrade --install webapp ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/prod.yaml \
            --set image.repository=$IMAGE_REPO \
            --set image.tag=$IMAGE_TAG \
            -n production







