name: Deploy Helm Chart (Zero Downtime)

on:
  workflow_dispatch:
    inputs:
      imageRepo:
        description: "Docker image repository"
        required: false
        default: "990060748279.dkr.ecr.us-east-1.amazonaws.com/swapp-dev"
      imageTag:
        description: "Docker image tag"
        required: false
        default: "latest"
  push:
    branches:
      - test
      - dev

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: "3.13.0"

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure kubectl with ServiceAccount Token
        env:
          K8S_SERVER: https://8E8E0B619BB89BD85A4298A1A6C979C3.gr7.ap-south-1.eks.amazonaws.com
          K8S_TOKEN: ${{ secrets.K8S_TOKEN }}
        run: |
          mkdir -p ~/.kube
          cat <<EOF > ~/.kube/config
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: ${K8S_SERVER}
            name: eks-cluster
          contexts:
          - context:
              cluster: eks-cluster
              user: sa-user
            name: eks-context
          current-context: eks-context
          users:
          - name: sa-user
            user:
              token: ${K8S_TOKEN}
          EOF

      - name: Verify Kubernetes Connection
        run: |
          kubectl cluster-info
          kubectl get nodes -o wide || true

      - name: Ensure Namespaces Exist
        run: |
          kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace production --dry-run=client -o yaml | kubectl apply -f -

      - name: Helm Lint
        run: helm lint ./helm-gitops-project/charts/webapp

      - name: Package Helm Chart
        run: helm package ./helm-gitops-project/charts/webapp --destination ./artifacts

      - name: Deploy to Dev
        if: github.ref == 'refs/heads/dev'
        run: |
          helm upgrade --install webapp-dev ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/dev.yaml \
            --set image.repository=${{ github.event.inputs.imageRepo }} \
            --set image.tag=${{ github.event.inputs.imageTag }} \
            -n dev --create-namespace

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          helm upgrade --install webapp-prod ./helm-gitops-project/charts/webapp \
            --values ./helm-gitops-project/charts/webapp/values/prod.yaml \
            --set image.repository=${{ github.event.inputs.imageRepo }} \
            --set image.tag=${{ github.event.inputs.imageTag }} \
            -n production --create-namespace
