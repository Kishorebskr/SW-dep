name: Deploy to EKS via GitOps

on:
  # 1. Automatically trigger for 'dev' when code is pushed to the main branch

  # 2. Allow manual deployments to any environment
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      image_tag:
        description: 'Image tag to deploy (e.g., commit SHA or version number)'
        required: true
      # New optional input for the image repository
      image_repository:
        description: 'Optional: New image repository to use (e.g., my-docker-hub/my-prod-app)'
        required: false

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Environment and Tag
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "TRIGGER: Push to main branch. Deploying to 'dev'."
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "image_tag=${{ github.sha }}" >> $GITHUB_OUTPUT
          else
            echo "TRIGGER: Manual workflow. Deploying to '${{ inputs.environment }}'."
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            echo "image_tag=${{ inputs.image_tag }}" >> $GITHUB_OUTPUT
          fi

      - name: List files in workspace
        run: |
          echo "Current directory structure:"
          ls -R

      - name: Update values.yaml
        run: |
          export ENV_PATH="helm-gitops-project/environments/${{ steps.vars.outputs.environment }}/values.yaml"
          export NEW_TAG="${{ steps.vars.outputs.image_tag }}"
          export NEW_REPO="${{ inputs.image_repository }}"

          # If a new repository is provided, update BOTH the repository and the tag.
          if [[ -n "$NEW_REPO" ]]; then
            echo "Updating $ENV_PATH with new repository: $NEW_REPO and tag: $NEW_TAG"
            # Update repository
            sed -i "/image:/,/^[^[:space:]]/ s|repository:.*|repository: \"$NEW_REPO\"|" "$ENV_PATH"
            # Update tag
            sed -i "/image:/,/^[^[:space:]]/ s|tag:.*|tag: \"$NEW_TAG\"|" "$ENV_PATH"
          else
            # Otherwise, just update the tag for the existing repository.
            echo "Updating $ENV_PATH with image tag: $NEW_TAG"
            sed -i "/image:/,/^[^[:space:]]/ s|tag:.*|tag: \"$NEW_TAG\"|" "$ENV_PATH"
          fi

          echo "--- Updated $ENV_PATH ---"
          cat "$ENV_PATH"
          echo "-------------------------"


      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Deploy: Update ${{ steps.vars.outputs.environment }} to image tag ${{ steps.vars.outputs.image_tag }}"
            git push
            echo "Pushed updated values.yaml to the repository."
          fi


